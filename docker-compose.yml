version: '3.8'

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=helloworld
      - DB_PORT=5432
    volumes:
      - ./server:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    ports:
      # - "3000:3000"
      - "80:80"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=helloworld
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
